
#include <set> 
#include <cmath> 
#include <queue> 
#include <stack> 
#include <vector> 
#include <string> 
#include <cstdio> 
#include <cstdlib> 
#include <cstring> 
#include <iostream> 
#include <algorithm> 
#include <functional>
using namespace std;
typedef long long ll;
const int N = 25;

int w,h;
char a[N][N];
int used[N][N];
int sx,sy,ans;
int dir[4][2] = {-1,0,0,-1,1,0,0,1};

void dfs(int x,int y){
    ans++;
    for(int i = 0;i < 4;i++){
        int xx = x + dir[i][0];
        int yy = y + dir[i][1];
        if(xx >= 0 && xx < h && yy >= 0 && yy < w &&
        !used[xx][yy] && a[xx][yy] != '#'){
            used[xx][yy] = 1;
            dfs(xx,yy);
        }
    }
}

int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    while(cin>>w>>h){
        if(w == 0 && h == 0){
            break;
        }
        for(int i = 0;i < h;i++){
            for(int j = 0;j < w;j++){
                cin>>a[i][j];
                if(a[i][j] == '@'){
                    sx = i;
                    sy = j;
                }    
            }
        }
        ans = 0;
        memset(used,0,sizeof(used));
        used[sx][sy] = 1;
        dfs(sx,sy);
        cout<<ans<<endl;
    }
    return 0;
}

